<!--
    xml 가장 중요한 부분은 namespace 속성 값을 앞에서 생성하고 작성한 Mapper 인터페이스의
    경로를 포함하는 인터페이스의 이름을 작성해야한다.
    namespace 속성 값이 중요한 이유는 MyBatis가 Mapper 인터페이스와 XML을 인터페이스 이름과
    namespace 속성 값을 가지고 판단하기 때문이다.

    인터페이스 이름과 namespace 속성 값이 동일한 이름이면 이를 병합해서 처리한다.
    이러한 경우에는 메서드 선언은 인터페이스에 존재하고 sql에 대한 처리는 xml을 이용
-->

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.vam.mapper.BoardMapper">
 
    <!--
        Mapper 인터페이스에서 선언한 enroll 메서드 호출될 시에 실행될 SQL문을 아래와 같이 작성한다.
        <insert> 태그에 id 속성 값을 메서드 이름과 동일하게 작성한다.
        값이 들어가야 할 구문에는 Mapper 인터페이스에서 선언한 enroll() 메서드의 파라미터 BoardVO 클래스의
        멤버변수명을 #{}을 붙여서 작성한다. "#{title}"의 경우 getTitle()/setTitle()을 의미하낟.
        따라서 BoardVO 멤버 변수인 title, content, writer에 값이 담긴 경우 그 값들이 각각
        #{title}, #{contents}, #{writer} 대체하여 sql문이 실행된다.

        select태그의 id 속성 값은 '게시판 목록' 메서드명과 동일해야 합니다.
    -->

    <!-- 작가 등록 -->
    <insert id="enroll">
    
        insert into vam_board(title, content, writer) values (#{title}, #{content}, #{writer})

    </insert>

    
    <!-- 게시판 목록 -->
    <select id="getList" resultType="com.vam.model.BoardVO">
    
        select * from vam_board
    
    </select>
    
    <!-- 게시판 조회 -->
    <select id="getPage" resultType="com.vam.model.BoardVO">
    
        select * from vam_board where bno = #{bno}

    </select>

    <!-- 게시판 수정 -->
    <update id="modify">
    
        update vam_board set title = #{title}, content = #{content}, updatedate = now() where bno = #{bno}

    </update>

    <!-- 게시판 삭제 -->
    <delete id="delete">
    
        delete from vam_board where bno = #{bno}
    
    </delete>

    <!-- Oracle -->
    <!-- 검색 조건문 -->
    <sql id="criteria">
        <trim prefix="AND (" suffix=")" prefixOverrides="OR">
            <foreach collection="typeArr" item="type">
                <trim prefix="OR">
                    <choose>
                        <when test="type == 'T'.toString()">
                            title like '%'||#{keyword}||'%' 
                        </when>
                        <when test="type == 'C'.toString()">
                            content like '%'||#{keyword}||'%' 
                        </when>
                        <when test="type == 'W'.toString()">
                            writer like '%'||#{keyword}||'%' 
                        </when>
                    </choose>
                </trim>
            </foreach>
        </trim>
    
    </sql>

    <!-- MySQL -->
    <!-- 검색 조건문 -->
    <sql id="criteria">
        <trim prefix="where (" suffix=")" prefixOverrides="OR">
            <foreach collection="typeArr" item="type">
                <trim prefix="OR">
                    <choose>
                        <when test="type == 'T'.toString()">
                            title like concat('%',#{keyword},'%') 
                        </when>
                        <when test="type == 'C'.toString()">
                            content like concat('%',#{keyword},'%') 
                        </when>
                        <when test="type == 'W'.toString()">
                            writer like concat('%',#{keyword},'%' )
                        </when>
                    </choose>
                </trim>
            </foreach>
        </trim>
    
    </sql>

    <!-- Oracle -->
    <!-- 게시물 목록(페이징) 
            인터페이스에서 작성한 메소드가 실행할 쿼리를 작성한다. 아래의 코드와 같이 <select> 태그와 쿼리를 작성
            <![CDATA[]]> 는 xml 파일 내의 쿼리 중 부등호가 사용될 때 해당 부등호를 태그로 인식하지 않도록 하기 위해서 사용
    -->
    <select id="getListPaging" resultType="com.vam.model.BoardVO">
    
    <![CDATA[
        
        select bno, title, content, writer, regdate, updatedate from(
        
                select /*+INDEX_DESC(vam_board pk_board) */ rownum  as rn, bno, title, content, writer, regdate, updatedate
                  
                from vam_board where rownum <= #{pageNum} * #{amount} 
    ]]>            
                <if test="keyword != null">
                    and title like '%'||#{keyword}||'%' 
                </if>
    
    <![CDATA[
                    
                )
                    
        where rn > (#{pageNum} -1) * #{amount}
    
    ]]>
    
    </select>

    <!-- MySQL -->
    <!-- 게시물 목록(페이징) -->
    <select id="getListPaging" resultType="com.vam.model.BoardVO">
    
        select * from (
                select bno, title, writer, regdate, updatedate  
                from vam_board 
                <if test="keyword != null">
                    <include refid="criteria"></include>
                </if>
                order by bno desc) as T1
        limit #{skip},#{amount}
    
    </select>

    <!-- 게시판 조회 -->
    <selec id="getPage" resultType="com.vam.model.BoardVO">
    
        select * from vam_board where bno = #{bno}

    </selec>

    <!-- 게시판 수정 -->
    <update id="modify">
    
        update vam_board set title = #{title}, content = #{content}, updatedate = now() where bno = #{bno}
    
    </update>

    <!-- 게시판 삭제 -->
    <delete id="delete">
    
        delete from vam_board where bno = #{bno}
    
    </delete>

    <!-- Oracle -->
    <!-- 게시물 총 개숫 -->
    <select id="getTotal" resultType="int">
    
        select count(*) from vam_board
        
        <if test="keyword != null">
        
            where bno > 0 <include refid="criteria"></include>
        
        </if>
    
    </select>

    <!-- MySQL -->
    <!-- 게시물 총 개숫 -->
    <select id="getTotal" resultType="int">
    
        select count(*) from vam_board
        
        <if test="keyword != null">
            <include refid="criteria"></include>
        </if>    
    
    </select>   
    
  </mapper>